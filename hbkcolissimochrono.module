<?php
use Drupal\hbkcolissimochrono\Plugin\Commerce\CheckoutPane\ShippingInformationHbkcolissimochrono;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\FieldStorageDefinitionInterface;

/**
 *
 * @file
 * Primary module hooks for hbk colissimo chrono module.
 */

/**
 * implement hook_entity_base_field_info
 *
 * @param EntityTypeInterface $entity_type
 */
function hbkcolissimochrono_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() == 'commerce_shipment') {
    /**
     * Pour sauvegarder les donnÃ©es colissimo.
     */
    $fields["hbkcolissimochrono_pickup"] = BaseFieldDefinition::create('text_long')->setLabel(" Colissimo pickup ")->setDisplayOptions('form', [])->setDisplayOptions('view', [
      'label' => 'hidden',
      'type' => 'hbkcoliickup_formatter',
      'weight' => 0
    ])->setDisplayConfigurable('view', TRUE)->setDisplayConfigurable('form', true);
  }
  return $fields;
}

/**
 * implement hook_commerce_checkout_pane_info_alter
 * ( cela permet de remplacer les classes par defaut ).
 */
function hbkcolissimochrono_commerce_checkout_pane_info_alter(&$definitions) {
  if (!empty($definitions['shipping_information']['class']) && $definitions['shipping_information']['provider'] == 'commerce_shipping') {
    $definitions['shipping_information']['class'] = ShippingInformationHbkcolissimochrono::class;
  }
}

/**
 * implement hook_theme
 *
 * @param string $existing
 * @param string $type
 * @param string $theme
 * @param string $path
 */
function hbkcolissimochrono_theme($existing, $type, $theme, $path) {
  return [
    'hbkcolissimochrono_pickup' => [
      'variables' => [
        'settings' => [],
        'address' => [],
        'attributes' => NULL
      ]
    ]
  ];
}